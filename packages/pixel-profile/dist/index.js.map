{"version":3,"sources":["../src/common/utils.ts","../src/common/retryer.ts","../src/template/index.ts","../src/utils/converter.ts","../src/utils/vec.ts","../src/utils/renderer.ts","../src/utils/shader.ts","../src/utils/rank.ts","../src/cards/stats.ts","../src/fetchers/stats-fetcher.ts"],"sourcesContent":["import axios, { type AxiosRequestConfig } from 'axios';\n\ntype AxiosRequestConfigData = AxiosRequestConfig['data']\ntype AxiosRequestConfigHeaders = AxiosRequestConfig['headers']\n\nconst kFormatter = (num: number): string => {\n  return Math.abs(num) > 999\n    ? Math.sign(num) * parseFloat((Math.abs(num) / 1000).toFixed(1)) + 'K'\n    : `${Math.sign(num) * Math.abs(num)}`;\n};\n\nconst request = (data: AxiosRequestConfigData, headers: AxiosRequestConfigHeaders) => {\n  return axios({\n    url: 'https://api.github.com/graphql',\n    method: 'post',\n    headers,\n    data,\n  });\n};\n\nconst noop = () => {};\n// return console instance based on the environment\nconst logger =\n  process.env.NODE_ENV === 'test' ? { log: noop, error: noop } : console;\n\nconst clampValue = (number, min, max) => {\n  if (Number.isNaN(parseInt(number, 10))) {\n    return min;\n  }\n  return Math.max(min, Math.min(number, max));\n};\n\nconst ONE_MINUTE = 60;\nconst FIVE_MINUTES = 300;\nconst TEN_MINUTES = 600;\nconst FIFTEEN_MINUTES = 900;\nconst THIRTY_MINUTES = 1800;\nconst TWO_HOURS = 7200;\nconst FOUR_HOURS = 14400;\nconst SIX_HOURS = 21600;\nconst EIGHT_HOURS = 28800;\nconst ONE_DAY = 86400;\n\nconst CONSTANTS = {\n  ONE_MINUTE,\n  FIVE_MINUTES,\n  TEN_MINUTES,\n  FIFTEEN_MINUTES,\n  THIRTY_MINUTES,\n  TWO_HOURS,\n  FOUR_HOURS,\n  SIX_HOURS,\n  EIGHT_HOURS,\n  ONE_DAY,\n  CARD_CACHE_SECONDS: SIX_HOURS,\n  ERROR_CACHE_SECONDS: TEN_MINUTES,\n};\n\nconst parseArray = (str) => {\n  if (!str) {\n    return [];\n  }\n  return str.split(',');\n};\n\nconst parseBoolean = (value) => {\n  if (typeof value === 'boolean') {\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    if (value.toLowerCase() === 'true') {\n      return true;\n    } else if (value.toLowerCase() === 'false') {\n      return false;\n    }\n  }\n  return undefined;\n};\n\nconst dateDiff = (d1, d2) => {\n  const date1 = new Date(d1);\n  const date2 = new Date(d2);\n  const diff = date1.getTime() - date2.getTime();\n  return Math.round(diff / (1000 * 60));\n};\n\nexport {\n  CONSTANTS,\n  clampValue,\n  kFormatter,\n  request,\n  logger,\n  parseArray,\n  parseBoolean,\n  dateDiff\n};\n","import { logger } from './utils';\n\n// Script variables.\n\n// Count the number of GitHub API tokens available.\nconst PATs = Object.keys(process.env).filter((key) =>\n  /PAT_\\d*$/.exec(key),\n).length;\nconst RETRIES = process.env.NODE_ENV === 'test' ? 7 : PATs;\n\n/**\n * @typedef {import(\"axios\").AxiosResponse} AxiosResponse Axios response.\n * @typedef {(variables: object, token: string) => Promise<AxiosResponse>} FetcherFunction Fetcher function.\n */\n\n/**\n * Try to execute the fetcher function until it succeeds or the max number of retries is reached.\n *\n * @param {FetcherFunction} fetcher The fetcher function.\n * @param {object} variables Object with arguments to pass to the fetcher function.\n * @param {number} retries How many times to retry.\n * @returns {Promise<T>} The response from the fetcher function.\n */\nconst retryer = async (fetcher, variables, retries = 0) => {\n  if (!RETRIES) {\n    throw new Error('No GitHub API tokens found');\n  }\n  if (retries > RETRIES) {\n    throw new Error('Downtime due to GitHub API rate limiting');\n  }\n  try {\n    // try to fetch with the first token since RETRIES is 0 index i'm adding +1\n    const response = await fetcher(\n      variables,\n      process.env[`PAT_${retries + 1}`],\n      retries,\n    );\n\n    // prettier-ignore\n    const isRateExceeded = response.data.errors && response.data.errors[0].type === 'RATE_LIMITED';\n\n    // if rate limit is hit increase the RETRIES and recursively call the retryer\n    // with username, and current RETRIES\n    if (isRateExceeded) {\n      logger.log(`PAT_${retries + 1} Failed`);\n      retries++;\n      // directly return from the function\n      return retryer(fetcher, variables, retries);\n    }\n\n    // finally return the response\n    return response;\n  } catch (err: any) {\n    // prettier-ignore\n    // also checking for bad credentials if any tokens gets invalidated\n    const isBadCredential = err.response.data && err.response.data.message === 'Bad credentials';\n    const isAccountSuspended =\n      err.response.data &&\n      err.response.data.message === 'Sorry. Your account was suspended.';\n\n    if (isBadCredential || isAccountSuspended) {\n      logger.log(`PAT_${retries + 1} Failed`);\n      retries++;\n      // directly return from the function\n      return retryer(fetcher, variables, retries);\n    } else {\n      return err.response;\n    }\n  }\n};\n\nexport { retryer, RETRIES };\nexport default retryer;\n","import {Rank} from '../utils';\n\ntype Stats = {\n  name: string\n  totalStars: string\n  totalCommits: string\n  totalPRs: string\n  totalIssues: string\n  contributedTo: string\n  rank: Rank\n  imgUrl: string\n}\n\ntype Options = {\n  color: string\n  background: string\n}\n\nexport const template = (stats: Stats, options: Options) => {\n  const {\n    name,\n    totalStars,\n    totalCommits,\n    totalPRs,\n    totalIssues,\n    contributedTo,\n    rank,\n    imgUrl,\n  } = stats;\n\n  const {\n    color,\n    background\n  } = options\n\n  return {\n    type: 'div',\n    key: null,\n    ref: null,\n    props: {\n      style: {\n        display: 'flex',\n        height: '100%',\n        width: '100%',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background,\n      },\n      children: {\n        type: 'div',\n        key: null,\n        ref: null,\n        props: {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            flexDirection: 'row',\n            fontSize: '23px',\n            color,\n            width: '92%',\n            height: '80%',\n            padding: 40,\n            border: `${color} 4px solid`,\n            position: 'relative',\n          },\n          children: [\n            {\n              type: 'div',\n              key: null,\n              ref: null,\n              props: {\n                style: {\n                  marginTop: 16,\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  flexDirection: 'column',\n                  flexGrow: 1,\n                  paddingRight: 40,\n                },\n                children: [\n                  {\n                    type: 'div',\n                    key: null,\n                    ref: null,\n                    props: {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'flex-start',\n                        justifyContent: 'space-between',\n                        flexDirection: 'row',\n                        width: '100%',\n                      },\n                      children: [\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: 'Total Stars Earned: ',\n                          },\n                        },\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: `${totalStars}`,\n                          },\n                        },\n                      ],\n                    },\n                  },\n                  {\n                    type: 'div',\n                    key: null,\n                    ref: null,\n                    props: {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'flex-start',\n                        justifyContent: 'space-between',\n                        flexDirection: 'row',\n                        width: '100%',\n                      },\n                      children: [\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: 'Total Commits: ',\n                          },\n                        },\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: `${totalCommits}`,\n                          },\n                        },\n                      ],\n                    },\n                  },\n                  {\n                    type: 'div',\n                    key: null,\n                    ref: null,\n                    props: {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'flex-start',\n                        justifyContent: 'space-between',\n                        flexDirection: 'row',\n                        width: '100%',\n                      },\n                      children: [\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: 'Total PRs: ',\n                          },\n                        },\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: `${totalPRs}`,\n                          },\n                        },\n                      ],\n                    },\n                  },\n                  {\n                    type: 'div',\n                    key: null,\n                    ref: null,\n                    props: {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'flex-start',\n                        justifyContent: 'space-between',\n                        flexDirection: 'row',\n                        width: '100%',\n                      },\n                      children: [\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: 'Total Issues: ',\n                          },\n                        },\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: `${totalIssues}`,\n                          },\n                        },\n                      ],\n                    },\n                  },\n                  {\n                    type: 'div',\n                    key: null,\n                    ref: null,\n                    props: {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'flex-start',\n                        justifyContent: 'space-between',\n                        flexDirection: 'row',\n                        width: '100%',\n                      },\n                      children: [\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: 'Contributed to (last year): ',\n                          },\n                        },\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: `${contributedTo}`,\n                          },\n                        },\n                      ],\n                    },\n                  },\n                  {\n                    type: 'div',\n                    key: null,\n                    ref: null,\n                    props: {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'flex-start',\n                        justifyContent: 'space-between',\n                        flexDirection: 'row',\n                        width: '100%',\n                      },\n                      children: {\n                        type: 'div',\n                        key: null,\n                        ref: null,\n                        props: {\n                          children: '-------------------------------',\n                        },\n                      },\n                    },\n                  },\n                  {\n                    type: 'div',\n                    key: null,\n                    ref: null,\n                    props: {\n                      style: {\n                        display: 'flex',\n                        alignItems: 'flex-start',\n                        justifyContent: 'space-between',\n                        flexDirection: 'row',\n                        width: '100%',\n                      },\n                      children: [\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: 'Score: ',\n                          },\n                        },\n                        {\n                          type: 'div',\n                          key: null,\n                          ref: null,\n                          props: {\n                            children: `${rank.score}`,\n                          },\n                        },\n                      ],\n                    },\n                  },\n                ],\n              },\n            },\n            {\n              type: 'img',\n              key: null,\n              ref: null,\n              props: {\n                src: `${imgUrl}`,\n                style: {\n                  height: '100%',\n                },\n              },\n            },\n            {\n              type: 'div',\n              key: null,\n              ref: null,\n              props: {\n                style: {\n                  lineHeight: 2,\n                  position: 'absolute',\n                  top: '-6px',\n                  left: '33px',\n                  background,\n                  padding: '0 4px',\n                },\n                children: `${name}'s GitHub Stats`,\n              },\n            },\n          ],\n        },\n      },\n    },\n  };\n};\n","import Jimp from 'jimp';\n\nexport async function getPixelsFromPngBuffer(dataBuffer): Promise<Buffer> {\n  const image = await Jimp.read(dataBuffer);\n\n  const width = image.getWidth();\n  const height = image.getHeight();\n  const pixelBuffer = Buffer.alloc(width * height * 4);\n\n  image.scan(0, 0, width, height, (x, y, idx) => {\n    pixelBuffer[idx] = image.bitmap.data[idx];\n    pixelBuffer[idx + 1] = image.bitmap.data[idx + 1];\n    pixelBuffer[idx + 2] = image.bitmap.data[idx + 2];\n    pixelBuffer[idx + 3] = image.bitmap.data[idx + 3];\n  });\n\n  return pixelBuffer;\n}\n\nexport function getBase64FromPixels(bitmapData, width, height): Promise<string> {\n  return new Promise((resolve) => {\n    new Jimp(width, height, function (err, image) {\n      image.bitmap.data = bitmapData;\n      image.getBase64('image/png', function (error, str) {\n        resolve(str);\n      });\n    });\n  });\n}\n\nexport function getPngBufferFromPixels(bitmapData, width, height): Promise<Buffer> {\n  return new Promise((resolve) => {\n    new Jimp(width, height, function (err, image) {\n      image.bitmap.data = bitmapData;\n      image.getBuffer('image/png', function (error, buffer) {\n        resolve(buffer);\n      });\n    });\n  });\n}\n","export type Vec = [number, number]\n\nexport function clamp(x: number, min: number, max: number): number {\n  return Math.min(max, Math.max(min, x));\n}\n","import {clamp} from './vec';\n\ntype Coordinates = [number, number]\ntype RGBA = [number, number, number, number]\ntype Texture2D = (coords: Coordinates) => RGBA\ntype FragShader = (uv: Coordinates, texture2D: Texture2D) => RGBA\n\nfunction coordsToIndex(x: number, y: number, width: number): number {\n  return (y * width + x) * 4;\n}\n\nexport function render(sourcePixels: number[], width: number, height: number, fragShader: FragShader): Buffer {\n  const targetBuffer = Buffer.alloc(width * height * 4);\n\n  function biLinearInterpolate(v1: number, v2: number, v3: number, v4: number, sx: number, sy: number): number {\n    const tmp1 = v1 * (1 - sx) + v2 * sx;\n    const tmp2 = v3 * (1 - sx) + v4 * sx;\n    return tmp1 * (1 - sy) + tmp2 * sy;\n  }\n\n  function biLinearFilter(coords: Coordinates): RGBA {\n    const x = coords[0] * width;\n    const y = coords[1] * height;\n    const x0 = clamp(Math.floor(x), 0, width - 1);\n    const x1 = clamp(x0 + 1, 0, width - 1);\n    const y0 = clamp(Math.floor(y), 0, height - 1);\n    const y1 = clamp(y0 + 1, 0, height - 1);\n\n    const sx = x - x0;\n    const sy = y - y0;\n\n    const p00 = (y0 * width + x0) * 4;\n    const p01 = (y1 * width + x0) * 4;\n    const p10 = (y0 * width + x1) * 4;\n    const p11 = (y1 * width + x1) * 4;\n\n    const r = biLinearInterpolate(\n      sourcePixels[p00],\n      sourcePixels[p10],\n      sourcePixels[p01],\n      sourcePixels[p11],\n      sx,\n      sy,\n    );\n    const g = biLinearInterpolate(\n      sourcePixels[p00 + 1],\n      sourcePixels[p10 + 1],\n      sourcePixels[p01 + 1],\n      sourcePixels[p11 + 1],\n      sx,\n      sy,\n    );\n    const b = biLinearInterpolate(\n      sourcePixels[p00 + 2],\n      sourcePixels[p10 + 2],\n      sourcePixels[p01 + 2],\n      sourcePixels[p11 + 2],\n      sx,\n      sy,\n    );\n    const a = biLinearInterpolate(\n      sourcePixels[p00 + 3],\n      sourcePixels[p10 + 3],\n      sourcePixels[p01 + 3],\n      sourcePixels[p11 + 3],\n      sx,\n      sy,\n    );\n\n    return [r, g, b, a];\n  }\n\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const rgba = fragShader([x / width, y / height], biLinearFilter);\n      const index = coordsToIndex(x, y, width);\n      targetBuffer[index] = rgba[0];\n      targetBuffer[index + 1] = rgba[1];\n      targetBuffer[index + 2] = rgba[2];\n      targetBuffer[index + 3] = rgba[3];\n    }\n  }\n\n  return targetBuffer;\n}\n","import {render} from './renderer';\nimport {type Vec} from './vec';\n\nexport function pixelate(sourceBuffer, width, height, blockSize): Buffer {\n  return render(sourceBuffer, width, height, (uv, texture2D) => {\n    const blockW = blockSize / width;\n    const blockH = blockSize / height;\n    const x = Math.floor(uv[0] / blockW);\n    const y = Math.floor(uv[1] / blockH);\n\n    return texture2D([x * blockW + blockW / 2, y * blockH + blockH / 2]);\n  });\n}\n\nconst margin = [0, 0];\nconst screenCurvature = 0.1;\n\nexport function curve(sourcePixels, width, height): Buffer {\n  return render(sourcePixels, width, height, (uv, texture2D) => {\n    function dot(a: Vec, b: Vec): number {\n      return a[0] * b[0] + a[1] * b[1];\n    }\n\n    function prod2(v: Vec): number {\n      return v[0] * v[1];\n    }\n\n    function subtract(vec1: Vec, vec2: Vec): Vec {\n      return [vec1[0] - vec2[0], vec1[1] - vec2[1]];\n    }\n\n    function distortCoordinates(coords): [number, number] {\n      const cc = subtract(coords, [0.5, 0.5]);\n      const dist = dot(cc, cc) * screenCurvature;\n      const temp = (1 + dist) * dist;\n      cc[0] = cc[0] * temp;\n      cc[1] = cc[1] * temp;\n\n      return [coords[0] + cc[0], coords[1] + cc[1]];\n    }\n\n    const coords = distortCoordinates(uv);\n\n    coords[0] = coords[0] * (margin[0] * 2 + 1) - margin[0];\n    coords[1] = coords[1] * (margin[1] * 2 + 1) - margin[1];\n\n    const vignetteCoords: Vec = [uv[0] * (1 - uv[1]), uv[1] * (1 - uv[0])];\n    const vignette = Math.pow(prod2(vignetteCoords) * 15, 0.25);\n\n    const samplerColor = texture2D(coords);\n\n    return [\n      samplerColor[0] * vignette,\n      samplerColor[1] * vignette,\n      samplerColor[2] * vignette,\n      255\n    ];\n  });\n}\n","function calcExponentialCDF(x: number): number {\n  return 1 - 2 ** -x;\n}\n\nfunction calcLogNormalCDF(x: number): number {\n  return x / (1 + x);\n}\n\nfunction formatScore(score: number): number {\n  if (score % 1 === 0) {\n    return Math.floor(score);\n  }\n\n  return score;\n}\n\nexport type Rank = {level: string, percentile: number, score: number}\n\nexport function rank({\n  all_commits,\n  commits,\n  prs,\n  issues,\n  reviews,\n  // eslint-disable-next-line no-unused-vars\n  repos,\n  stars,\n  followers,\n}): Rank {\n  const COMMITS_MEDIAN = all_commits ? 1000 : 250,\n    COMMITS_WEIGHT = 2;\n  const PRS_MEDIAN = 50,\n    PRS_WEIGHT = 3;\n  const ISSUES_MEDIAN = 25,\n    ISSUES_WEIGHT = 1;\n  const REVIEWS_MEDIAN = 2,\n    REVIEWS_WEIGHT = 1;\n  const STARS_MEDIAN = 50,\n    STARS_WEIGHT = 4;\n  const FOLLOWERS_MEDIAN = 10,\n    FOLLOWERS_WEIGHT = 1;\n\n  const TOTAL_WEIGHT =\n    COMMITS_WEIGHT +\n    PRS_WEIGHT +\n    ISSUES_WEIGHT +\n    REVIEWS_WEIGHT +\n    STARS_WEIGHT +\n    FOLLOWERS_WEIGHT;\n\n  const THRESHOLDS = [1, 12.5, 25, 37.5, 50, 62.5, 75, 87.5, 100];\n  const LEVELS = ['S', 'A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C'];\n\n  const score =\n    (COMMITS_WEIGHT * calcExponentialCDF(commits / COMMITS_MEDIAN) +\n      PRS_WEIGHT * calcExponentialCDF(prs / PRS_MEDIAN) +\n      ISSUES_WEIGHT * calcExponentialCDF(issues / ISSUES_MEDIAN) +\n      REVIEWS_WEIGHT * calcExponentialCDF(reviews / REVIEWS_MEDIAN) +\n      STARS_WEIGHT * calcLogNormalCDF(stars / STARS_MEDIAN) +\n      FOLLOWERS_WEIGHT * calcLogNormalCDF(followers / FOLLOWERS_MEDIAN)) /\n    TOTAL_WEIGHT;\n\n  const rank = 1 - score;\n\n  const level = LEVELS[THRESHOLDS.findIndex((t) => rank * 100 <= t)];\n\n  return {\n    level,\n    percentile: rank * 100,\n    score: formatScore(Number((score * 100).toFixed(1))),\n  };\n}\n","import { kFormatter } from '../common';\nimport { template } from '../template';\nimport {\n  curve,\n  getBase64FromPixels,\n  getPixelsFromPngBuffer,\n  getPngBufferFromPixels,\n  pixelate, Rank,\n} from '../utils';\nimport { Resvg } from '@resvg/resvg-js';\nimport axios from 'axios';\nimport { readFile } from 'node:fs/promises';\nimport { join } from 'node:path';\nimport satori from 'satori';\n\nconst CARD_WIDTH = 1220\nconst CARD_HEIGHT = 460\nconst AVATAR_WIDTH = 280\nconst AVATAR_HEIGHT = 280\n\ntype Stats = {\n  name: string\n  username: string\n  totalStars: number\n  totalCommits: number\n  totalIssues: number\n  totalPRs: number\n  avatarUrl: string\n  contributedTo: number\n  rank: Rank\n}\n\ntype Options = {\n  screenEffect?: boolean\n}\n\nexport async function renderStats(stats: Stats, options: Options): Promise<Buffer> {\n  const {\n    name,\n    username,\n    totalStars,\n    totalCommits,\n    totalIssues,\n    totalPRs,\n    avatarUrl,\n    contributedTo,\n    rank,\n  } = stats;\n\n  const { screenEffect = true } = options\n\n  const width = CARD_WIDTH;\n  const height = CARD_HEIGHT;\n\n  const fontPath = join(process.cwd(), 'fonts', 'PressStart2P-Regular.ttf');\n\n  const [fontData, imgUrl] = await Promise.all([\n    readFile(fontPath),\n    makeAvatar(avatarUrl, AVATAR_WIDTH, AVATAR_HEIGHT),\n  ]);\n\n  const _stats = {\n    name,\n    imgUrl,\n    totalStars: kFormatter(totalStars),\n    totalCommits: kFormatter(totalCommits),\n    totalIssues: kFormatter(totalIssues),\n    totalPRs: kFormatter(totalPRs),\n    contributedTo: kFormatter(contributedTo),\n    rank,\n  };\n\n  let isMissingFont = false\n\n  const templateOptions = {\n    color: 'white',\n    background: '#434343' // #00a7d0\n  }\n\n  let svg = await satori(template(_stats, templateOptions), {\n    width,\n    height,\n    fonts: [\n      {\n        name: 'PressStart2P',\n        data: fontData,\n        weight: 400,\n        style: 'normal',\n      },\n    ],\n    loadAdditionalAsset: async () => {\n      isMissingFont = true\n      return ''\n    }\n  });\n\n  if (isMissingFont) {\n    _stats.name = username\n\n    svg = await satori(\n      template(_stats, templateOptions),\n      {\n      width,\n      height,\n      fonts: [\n        {\n          name: 'PressStart2P',\n          data: fontData,\n          weight: 400,\n          style: 'normal',\n        },\n      ]\n    });\n  }\n\n  const opts = {\n    fitTo: {\n      mode: 'width',\n      value: width,\n    },\n  } as const;\n\n  const pngData = new Resvg(svg, opts).render();\n  const pngBuffer = pngData.asPng();\n\n  let pixels = await getPixelsFromPngBuffer(pngBuffer);\n\n  if (screenEffect) {\n    pixels = curve(pixels, width, height);\n  }\n\n  return await getPngBufferFromPixels(pixels, width, height);\n}\n\nasync function makeAvatar(url: string, width: number, height: number, blockSize: number = 6.8): Promise<string> {\n  const response = await axios.get(url, {\n    responseType: 'arraybuffer',\n  });\n\n  const png = Buffer.from(response.data, 'binary');\n\n  const _pixels = await getPixelsFromPngBuffer(png);\n\n  const pixels = pixelate(_pixels, width, height, blockSize);\n\n  return await getBase64FromPixels(pixels, width, height);\n}\n","import {\n  logger,\n  request,\n} from '../common';\nimport { retryer } from '../common/retryer';\nimport {Rank, rank} from '../utils';\nimport axios, { type AxiosResponse }  from 'axios';\nimport * as dotenv from 'dotenv';\nimport githubUsernameRegex from 'github-username-regex';\n\ndotenv.config();\n\n// GraphQL queries.\nconst GRAPHQL_REPOS_FIELD = `\n  repositories(first: 100, ownerAffiliations: OWNER, orderBy: {direction: DESC, field: STARGAZERS}, after: $after) {\n    totalCount\n    nodes {\n      name\n      stargazers {\n        totalCount\n      }\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n`;\n\nconst GRAPHQL_REPOS_QUERY = `\n  query userInfo($login: String!, $after: String) {\n    user(login: $login) {\n      ${GRAPHQL_REPOS_FIELD}\n    }\n  }\n`;\n\nconst GRAPHQL_STATS_QUERY = `\n  query userInfo($login: String!, $after: String, $includeMergedPullRequests: Boolean!, $includeDiscussions: Boolean!, $includeDiscussionsAnswers: Boolean!) {\n    user(login: $login) {\n      name\n      login\n      avatarUrl(size: 280)\n      bio\n      contributionsCollection {\n        totalCommitContributions,\n        totalPullRequestReviewContributions\n      }\n      repositoriesContributedTo(first: 1, contributionTypes: [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY]) {\n        totalCount\n      }\n      pullRequests(first: 1) {\n        totalCount\n      }\n      mergedPullRequests: pullRequests(states: MERGED) @include(if: $includeMergedPullRequests) {\n        totalCount\n      }\n      openIssues: issues(states: OPEN) {\n        totalCount\n      }\n      closedIssues: issues(states: CLOSED) {\n        totalCount\n      }\n      followers {\n        totalCount\n      }\n      repositoryDiscussions @include(if: $includeDiscussions) {\n        totalCount\n      }\n      repositoryDiscussionComments(onlyAnswers: true) @include(if: $includeDiscussionsAnswers) {\n        totalCount\n      }\n      ${GRAPHQL_REPOS_FIELD}\n    }\n  }\n`;\n\n/**\n * @typedef {import('axios').AxiosResponse} AxiosResponse Axios response.\n */\n\n/**\n * Stats fetcher object.\n *\n * @param {object} variables Fetcher variables.\n * @param {string} token GitHub token.\n * @returns {Promise<AxiosResponse>} Axios response.\n */\nconst fetcher = (variables: Record<PropertyKey, unknown>, token: string): Promise<AxiosResponse> => {\n  const query = variables.after ? GRAPHQL_REPOS_QUERY : GRAPHQL_STATS_QUERY;\n  return request(\n    {\n      query,\n      variables,\n    },\n    {\n      Authorization: `bearer ${token}`,\n    },\n  );\n};\n\n/**\n * Fetch stats information for a given username.\n *\n * @param {object} variables Fetcher variables.\n * @param {string} variables.username Github username.\n * @param {boolean} variables.includeMergedPullRequests Include merged pull requests.\n * @param {boolean} variables.includeDiscussions Include discussions.\n * @param {boolean} variables.includeDiscussionsAnswers Include discussions answers.\n * @returns {Promise<AxiosResponse>} Axios response.\n *\n * @description This function supports multi-page fetching if the 'FETCH_MULTI_PAGE_STARS' environment variable is set to true.\n */\nconst statsFetcher = async ({\n  username,\n  includeMergedPullRequests,\n  includeDiscussions,\n  includeDiscussionsAnswers,\n}) => {\n  let stats;\n  let hasNextPage = true;\n  let endCursor = null;\n  while (hasNextPage) {\n    const variables = {\n      login: username,\n      first: 100,\n      after: endCursor,\n      includeMergedPullRequests,\n      includeDiscussions,\n      includeDiscussionsAnswers,\n    };\n    const res = await retryer(fetcher, variables);\n    if (res.data.errors) {\n      return res;\n    }\n\n    // Store stats data.\n    const repoNodes = res.data.data.user.repositories.nodes;\n    if (stats) {\n      stats.data.data.user.repositories.nodes.push(...repoNodes);\n    } else {\n      stats = res;\n    }\n\n    // Disable multi page fetching on public Vercel instance due to rate limits.\n    const repoNodesWithStars = repoNodes.filter(\n      (node) => node.stargazers.totalCount !== 0,\n    );\n    hasNextPage =\n      process.env.FETCH_MULTI_PAGE_STARS === 'true' &&\n      repoNodes.length === repoNodesWithStars.length &&\n      res.data.data.user.repositories.pageInfo.hasNextPage;\n    endCursor = res.data.data.user.repositories.pageInfo.endCursor;\n  }\n\n  return stats;\n};\n\n/**\n * Fetch all the commits for all the repositories of a given username.\n *\n * @param {string} username GitHub username.\n * @returns {Promise<number>} Total commits.\n *\n * @description Done like this because the GitHub API does not provide a way to fetch all the commits. See\n * #92#issuecomment-661026467 and #211 for more information.\n */\nconst totalCommitsFetcher = async (username) => {\n  if (!githubUsernameRegex.test(username)) {\n    logger.log('Invalid username provided.');\n    throw new Error('Invalid username provided.');\n  }\n\n  // https://developer.github.com/v3/search/#search-commits\n  const fetchTotalCommits = (variables, token) => {\n    return axios({\n      method: 'get',\n      url: `https://api.github.com/search/commits?q=author:${variables.login}`,\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/vnd.github.cloak-preview',\n        Authorization: `token ${token}`,\n      },\n    });\n  };\n\n  let res;\n  try {\n    res = await retryer(fetchTotalCommits, { login: username });\n  } catch (err: any) {\n    logger.log(err);\n    throw new Error(err);\n  }\n\n  const totalCount = res.data.total_count;\n  if (!totalCount || isNaN(totalCount)) {\n    throw new Error('Could not fetch total commits.');\n  }\n  return totalCount;\n};\n\nexport type StatsData = {\n  name: string;\n  username;\n  bio: string;\n  avatarUrl: string;\n  totalPRs: number;\n  totalPRsMerged: number;\n  mergedPRsPercentage: number;\n  totalReviews: number;\n  totalCommits: number;\n  totalIssues: number;\n  totalStars: number;\n  totalDiscussionsStarted: number;\n  totalDiscussionsAnswered: number;\n  contributedTo: number;\n  rank: Rank;\n}\n\nexport async function fetchStats(\n  username: string,\n  include_all_commits = false,\n  exclude_repo: string[] = [],\n  include_merged_pull_requests = false,\n  include_discussions = false,\n  include_discussions_answers = false,\n): Promise<StatsData> {\n  if (!username) {\n    throw new Error('needs a username');\n  }\n\n  const stats = {\n    name: '',\n    username,\n    avatarUrl: '',\n    bio: '',\n    totalPRs: 0,\n    totalPRsMerged: 0,\n    mergedPRsPercentage: 0,\n    totalReviews: 0,\n    totalCommits: 0,\n    totalIssues: 0,\n    totalStars: 0,\n    totalDiscussionsStarted: 0,\n    totalDiscussionsAnswered: 0,\n    contributedTo: 0,\n    rank: { level: 'C', percentile: 100, score: 0 },\n  };\n\n  const res = await statsFetcher({\n    username,\n    includeMergedPullRequests: include_merged_pull_requests,\n    includeDiscussions: include_discussions,\n    includeDiscussionsAnswers: include_discussions_answers,\n  });\n\n  // Catch GraphQL errors.\n  if (res.data.errors) {\n    logger.error(res.data.errors);\n    if (res.data.errors[0].type === 'NOT_FOUND') {\n      throw new Error(res.data.errors[0].message || 'Could not fetch user.')\n    }\n    if (res.data.errors[0].message) {\n      throw new Error(res.data.errors[0].message)\n    }\n\n    throw new Error('Something went wrong while trying to retrieve the stats data using the GraphQL API.')\n  }\n\n  const user = res.data.data.user;\n\n  stats.name = user.name || user.login;\n  stats.avatarUrl = user.avatarUrl;\n  stats.bio = user.bio;\n\n  // if include_all_commits, fetch all commits using the REST API.\n  if (include_all_commits) {\n    stats.totalCommits = await totalCommitsFetcher(username);\n  } else {\n    stats.totalCommits = user.contributionsCollection.totalCommitContributions;\n  }\n\n  stats.totalPRs = user.pullRequests.totalCount;\n  if (include_merged_pull_requests) {\n    stats.totalPRsMerged = user.mergedPullRequests.totalCount;\n    stats.mergedPRsPercentage =\n      (user.mergedPullRequests.totalCount / user.pullRequests.totalCount) * 100;\n  }\n  stats.totalReviews =\n    user.contributionsCollection.totalPullRequestReviewContributions;\n  stats.totalIssues = user.openIssues.totalCount + user.closedIssues.totalCount;\n  if (include_discussions) {\n    stats.totalDiscussionsStarted = user.repositoryDiscussions.totalCount;\n  }\n  if (include_discussions_answers) {\n    stats.totalDiscussionsAnswered =\n      user.repositoryDiscussionComments.totalCount;\n  }\n  stats.contributedTo = user.repositoriesContributedTo.totalCount;\n\n  // Retrieve stars while filtering out repositories to be hidden.\n  const repoToHide = new Set(exclude_repo);\n\n  stats.totalStars = user.repositories.nodes\n    .filter((data) => {\n      return !repoToHide.has(data.name);\n    })\n    .reduce((prev, curr) => {\n      return prev + curr.stargazers.totalCount;\n    }, 0);\n\n  stats.rank = rank({\n    all_commits: include_all_commits,\n    commits: stats.totalCommits,\n    prs: stats.totalPRs,\n    reviews: stats.totalReviews,\n    issues: stats.totalIssues,\n    repos: user.repositories.totalCount,\n    stars: stats.totalStars,\n    followers: user.followers.totalCount,\n  });\n\n  return stats;\n}\n"],"mappings":"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","names":["fetcher","rank","coords","rank","axios","rank","axios"]}